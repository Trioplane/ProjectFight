from ./generic_throwable import ItemGenericThrowable

class ItemGenericThrowableNoGravity(ItemGenericThrowable):
    def __init__(self, item_name, config, insert_on_use = None, insert_on_movement_step = None, insert_on_impact = None) :
        super().__init__(item_name, config, insert_on_use, insert_on_movement_step, insert_on_impact)

    def use(self):
        tag @s add projectfight.player.items.temp.owner

        execute anchored eyes at @s: 
            summon marker ^ ^ ^5 {Tags:["projectfight.utils.temp"]}
            summon item_display ^ ^ ^1 {
                Tags: [f"projectfight.items.{self.item_name}", "projectfight.items", "projectfight.items.temp",],
                item: { id: "popped_chorus_fruit", components: { item_model: f"projectfight:items/{self.item_name}" } },
                teleport_duration: 2
            }

        execute as @n[type=item_display,tag=projectfight.items.temp]: 
            rotate @s facing entity @n[type=marker,tag=projectfight.utils.temp]

            scoreboard players set @s projectfight.items.speed self.config.speed
            function projectfight:items/main/give_id
            scoreboard players operation @s projectfight.items.owner = @p[tag=projectfight.player.items.temp.owner] projectfight.player.id

        if self.insert_on_use: 
            self.insert_on_use(self)

        kill @n[type=marker,tag=projectfight.utils.temp]
        tag @n[type=item_display,tag=projectfight.items.temp] remove projectfight.items.temp
        tag @s remove projectfight.player.items.temp.owner

    def movement_step(self):
        execute at @s if function projectfight:items/collision/check/basic_extended run function f"projectfight:items/definitions/{self.item_name}/on_impact"
    
        if self.insert_on_movement_step: 
            self.insert_on_movement_step(self)

        execute store result storage projectfight:items temp.item.speed float 0.001 run scoreboard players get @s projectfight.items.speed
        function projectfight:items/movement/move/no_gravity with storage projectfight:items temp.item

    def on_impact(self):
        tag @s add projectfight.items.temp.impact
        execute as @a if score @s projectfight.player.id = @n[type=item_display,tag=projectfight.items.temp.impact] projectfight.items.owner:
            tag @s add projectfight.player.temp.attacker
    
        execute as @a[distance=(None, self.config.on_impact.aoe_range)]:
            tag @s add projectfight.player.temp.victim
            scoreboard players add @s projectfight.player.damage_to_deal self.config.on_impact.damage
    
        function projectfight:player/health/apply_damage

        if self.insert_on_impact: 
            self.insert_on_impact(self)

        kill @s

ItemGenericThrowableNoGravity("generic_throwable_no_gravity", {
    speed: 3000,
    on_impact: {
        aoe_range: 3,
        damage: 25
    }
}).build()