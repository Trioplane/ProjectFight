from bolt_expressions import Scoreboard
from ./generic_throwable import ItemGenericThrowable
from projectfight:player/movement import KNOCKBACK_PUSH_VECTOR_ENTITY

class ItemGenericThrowableBouncy(ItemGenericThrowable):
    def __init__(self, item_name, config, insert_on_use = None, insert_on_movement_step = None, insert_on_impact = None) :
        super().__init__(item_name, config, insert_on_use, insert_on_movement_step, insert_on_impact)

    # THIS IS NOT HOW YOU SHOULD DO BOUNCE, THIS IS TEMPORARY
    # ALL THIS DOES IS KEEP FLIPPING THE SIGN OF HORIZONTAL VEL WHEN HITTING A WALl
    # WHEN IN REALITY, IT SHOULD NOT AND JUST MAKE THE ITEM CHANGE ROTATION
    def movement_step(self):
        execute at @s if function projectfight:items/collision/check/ground run return run function f"projectfight:items/definitions/{self.item_name}/on_impact"

        if self.insert_on_movement_step: 
            self.insert_on_movement_step(self)

        execute at @s:
            execute if function projectfight:items/collision/check/block_ahead run return:
                horizontal_vel = Scoreboard("projectfight.items.velocity.horizontal")
                horizontal_vel["@s"] = horizontal_vel["@s"] * -0.25
                execute store result storage projectfight:items temp.item.velocity.horizontal float 0.001 run scoreboard players get @s projectfight.items.velocity.horizontal
                execute store result storage projectfight:items temp.item.velocity.vertical float 0.001 run scoreboard players get @s projectfight.items.velocity.vertical
                #tag @s add f"projectfight.items.{self.item_name}.hit_wall"
                tellraw @a "wall!"

            # no wall
            execute store result storage projectfight:items temp.item.velocity.horizontal float 0.001 run scoreboard players get @s projectfight.items.velocity.horizontal
            execute store result storage projectfight:items temp.item.velocity.vertical float 0.001 run scoreboard players get @s projectfight.items.velocity.vertical
            execute store result storage projectfight:items temp.item.velocity.sideward float 0.001 run scoreboard players get @s projectfight.items.velocity.sideward
            tellraw @a "no wall :("

        function projectfight:items/movement/move/gravity with storage projectfight:items temp.item.velocity

        execute if score @s projectfight.items.velocity.horizontal matches -10..10 run scoreboard players set @s projectfight.items.velocity.horizontal 0
        execute if score @s projectfight.items.velocity.horizontal matches 1..:
            if self.config.acceleration.horizontal < 0:
                scoreboard players remove @s projectfight.items.velocity.horizontal (self.config.acceleration.horizontal * -1)
            else:
                scoreboard players add @s projectfight.items.velocity.horizontal self.config.acceleration.horizontal
        
        execute if score @s projectfight.items.velocity.horizontal matches ..-1:
            if self.config.acceleration.horizontal < 0:
                scoreboard players add @s projectfight.items.velocity.horizontal self.config.acceleration.horizontal
            else:
                scoreboard players remove @s projectfight.items.velocity.horizontal (self.config.acceleration.horizontal * -1)
    
        execute unless score @s projectfight.items.velocity.vertical matches ..-2000:
            if self.config.acceleration.vertical < 0:
                scoreboard players remove @s projectfight.items.velocity.vertical (self.config.acceleration.vertical * -1)
            else:
                scoreboard players add @s projectfight.items.velocity.vertical self.config.acceleration.vertical

        if self.config.acceleration.sideward < 0:
            scoreboard players remove @s projectfight.items.velocity.sideward (self.config.acceleration.sideward * -1)
        else:
            scoreboard players add @s projectfight.items.velocity.sideward self.config.acceleration.sideward


# ItemGenericThrowableBouncy("generic_throwable_bouncy", {
#     init_velocity: {
#         horizontal: 600,
#         vertical: 0,
#         sideward: 0
#     },
#     acceleration: {
#         horizontal: 0,
#         vertical: -70,
#         sideward: 0
#     },
#     on_impact: {
#         aoe_range: 2,
#         knockback_strength: 40,
#         damage: 70
#     }
# }).build()